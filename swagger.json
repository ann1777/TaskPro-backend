{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "ProTask V1 API docs",
    "description": "API documentation for GoIT project 'ProTask' V1. [Backend github repository](https://github.com/ann1777/TaskPro-backend)",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://taskpro-backend-c73a.onrender.com" }],
  "tags": [
    {
      "name": "SignUp",
      "description": "Registration endpoints"
    },
    {
      "name": "SignIn",
      "description": "Login endpoints"
    },
    {
      "name": "SignOut",
      "description": "Logout endpoints"
    },
    {
      "name": "Get all DASHBOARDS",
      "description": "Get all dashboards, post"
    },
    {
      "name": "get all COLUMNS by DashboardId",
      "description": "Get all columns by dashboard ID, post"
    },
    {
      "name": "Operations with COLUMNS by DashboardId",
      "description": "Operations with columns by dashboard ID, getByID, updateByID, deleteByID"
    },
    {
      "name": "get all CARDS by ColumnId",
      "description": "Get all cards by column ID, post"
    },
    {
      "name": "Operations with CARDS by ColumnId",
      "description": "Operations with cards by column ID, getByID, updateByID, deleteByID"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["Signup"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/schemas/user-schemas.userRegistrationSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/schemas/user-schemas.userRegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "User with provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": ["Signin"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/schemas/user-schemas.userSignInSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful signin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/schemas/user-schemas.userSigninResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "403": {
            "description": "Email doesn't exist / Password is wrong",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Logout"],
        "summary": "User logout",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/auth/updateTheme": {
      "put": {
        "tags": ["Update App theme"],
        "summary": "Update the theme by user ID",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user"
          }
        ],
        "requestBody": {
          "description": "Updated theme",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/schemas/user-schemas.updateProfileThemeSchema"
              },
              "example": {
                "theme": "Dark"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update profile theme",
            "content": {
              "application/json": {
                "example": {
                  "userId": "userId",
                  "theme": "Dark"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Column not found",
            "content": {}
          }
        }
      }
    },
    "/dashboard/": {
      "get": {
        "tags": ["Get all DASHBOARDS"],
        "summary": "Get all dashboards",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": []
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Create a new DASHBOARDS"],
        "summary": "Create a new dashboard",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Dashboard object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/schemas/dashboard-schemas.dashboardAddSchema"
              },
              "example": {
                "title": "New Dashboard",
                "icon": "dashboard-icon",
                "columns": []
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful creation the new dashboard",
            "content": {
              "application/json": {
                "example": {
                  "_id": "dashboardId",
                  "title": "dashboard-title",
                  "icon": "dashboard-icon",
                  "columns": [],
                  "owner": "userId"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          }
        }
      }
    },
    "/dashboard/{dashboardID}": {
      "get": {
        "tags": ["get all COLUMNS by DashboardId"],
        "summary": "Get all columns by dashboard ID",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "dashboardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the dashboard I need to get all columns"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": []
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Dashboard not found",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["add new COLUMN by DashboardId"],
        "summary": "Create a new column under a dashboard",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "dashboardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the dashboard"
          }
        ],
        "requestBody": {
          "description": "Column object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/schemas/column-schemas.columnAddSchema"
              },
              "example": {
                "title": "New Column",
                "cards": []
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful creation",
            "content": {
              "application/json": {
                "example": {
                  "_id": "columnId",
                  "title": "New Column",
                  "cards": [],
                  "dashboardId": "dashboardId"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Dashboard not found",
            "content": {}
          }
        }
      }
    },
    "/column/{dashboardId}/{columnId}": {
      "get": {
        "tags": ["Operations with COLUMNS by DashboardId"],
        "summary": "Get a column by ID under a dashboard",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "dashboardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the dashboard"
          },
          {
            "name": "columnId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the column"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "_id": "columnId",
                  "title": "Column Title",
                  "cards": [],
                  "dashboardId": "dashboardId"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Column not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Operations with COLUMNS by DashboardId"],
        "summary": "Delete a column by ID under a dashboard",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "dashboardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the dashboard"
          },
          {
            "name": "columnId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the column"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful deletion",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Column not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Operations with COLUMNS by DashboardId"],
        "summary": "Update a column by ID under a dashboard",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "dashboardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the dashboard"
          },
          {
            "name": "columnId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the column"
          }
        ],
        "requestBody": {
          "description": "Updated column object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/schemas/column-schemas.columnAddSchema"
              },
              "example": {
                "title": "Updated Column Title",
                "cards": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "example": {
                  "_id": "columnId",
                  "title": "Updated Column Title",
                  "cards": [],
                  "dashboardId": "dashboardId"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Column not found",
            "content": {}
          }
        }
      }
    },
    "/card/{columnId}": {},
    "/card/{columnId}/{cardId}": {}
  }
}
